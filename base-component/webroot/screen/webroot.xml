<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a 
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<screen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/xml-screen-2.0.xsd"
        require-authentication="false">
    <!-- NOTE: require-authentication=false is required to allow sub-screens to decide, and because the Login screen is below this. -->
    <always-actions>
        <!-- No JS or CSS files referenced here, just setup lists for subscreens to add to in pre-actions -->
        <set field="html_scripts" from="new LinkedHashSet()"/>
        <set field="footer_scripts" from="new LinkedHashSet()"/>

        <!-- See WebrootThemeData.xml for CSS references -->
        <set field="html_stylesheets" from="new LinkedHashSet()"/>
    </always-actions>
    <transition name="status">
        <actions><script>ec.web.sendJsonResponse(ec.factory.getStatusMap())</script></actions>
        <default-response type="none"/>
    </transition>
    <transition name="menuData" read-only="true" begin-transaction="false">
        <actions><script><![CDATA[
            import org.moqui.impl.screen.ScreenDefinition
            import org.moqui.impl.screen.ScreenUrlInfo

            def fullUrlInfo = ScreenUrlInfo.getScreenUrlInfo(sri, sri.rootScreenDef, sri.screenUrlInfo.extraPathNameList, null, false)
            ArrayList<String> extraPath = fullUrlInfo.fullPathNameList
            int extraPathSize = extraPath.size()

            StringBuilder currentPath = new StringBuilder()
            List menuDataList = []
            ScreenDefinition curScreen = sri.rootScreenDef

            for (int i = 0; i < extraPathSize; i++) {
                String pathItem = extraPath.get(i)
                String nextItem = extraPathSize > i+1 ? extraPath.get(i+1) : null
                def nextSsi = curScreen.getSubscreensItem(pathItem)
                if (nextSsi == null) { ec.web.request.sendError(404, "Item ${pathItem} invalid in path ${pathInfo}"); return }
                curScreen = ec.screen.getScreenDefinition(nextSsi.location)
                if (curScreen == null) { ec.web.request.sendError(404, "No screen found at ${pathInfo}"); return }

                currentPath.append('/').append(pathItem)
                List subscreensList = []
                for (subscreensItem in curScreen.getMenuSubscreensItems()) {
                    String screenPath = new StringBuilder(currentPath).append('/').append(subscreensItem.name).toString()
                    def screenUrlInstance = sri.buildUrl(screenPath)
                    if (!screenUrlInstance.isPermitted()) continue

                    String menuImage = screenUrlInstance.sui.menuImage
                    String menuImageType = screenUrlInstance.sui.menuImageType
                    if (menuImage && (!menuImageType || menuImageType == "url-screen")) menuImage = sri.buildUrl(menuImage).url

                    subscreensList.add([name:subscreensItem.name, title:ec.resource.expand(subscreensItem.menuTitle, ""),
                                        path:screenPath, image:menuImage, imageType:menuImageType,
                                        active:(nextItem == subscreensItem.name), disableLink:screenUrlInstance.disableLink])
                }

                menuDataList.add([name:pathItem, title:curScreen.getDefaultMenuName(), subscreens:subscreensList, path:currentPath.toString()])
            }

            ec.web.sendJsonResponse(menuDataList)
            ]]></script></actions>
        <default-response type="none"/>
    </transition>

    <subscreens default-item="apps">
        <subscreens-item name="toolstatic" location="component://tools/screen/toolstatic.xml" menu-include="false"/>
        <!-- add UNDECORATED (or self-decorating) app roots here -->
    </subscreens>
    <widgets>
        <render-mode>
            <text type="html" location="component://webroot/screen/includes/Header.html.ftl" no-boundary-comment="true"/>
            <text type="xsl-fo" location="component://webroot/screen/includes/Header.xsl-fo.ftl" no-boundary-comment="true"/>
        </render-mode>

        <subscreens-active/>

        <render-mode>
            <text type="html" location="component://webroot/screen/includes/Footer.html.ftl"/>
            <text type="xsl-fo"><![CDATA[${sri.getAfterScreenWriterText()}</fo:flow></fo:page-sequence></fo:root>]]></text>
        </render-mode>
    </widgets>
</screen>
